import com.well.modules.models.Meeting;
import com.well.modules.models.Availability;
import com.well.modules.models.User;
import kotlinx.datetime.Instant;
import kotlin.collections.Set;

CREATE TABLE Meetings (
    id BIGINT AS Meeting.Id NOT NULL PRIMARY KEY AUTO_INCREMENT,
    availabilityId BIGINT AS Availability.Id NOT NULL,
    expertUid BIGINT AS User.Id NOT NULL,
    creatorUid BIGINT AS User.Id NOT NULL,
    state TEXT AS Meeting.State NOT NULL,
    startInstant BIGINT AS Instant NOT NULL,
    durationMinutes INTEGER NOT NULL,
    deleted BOOLEAN NOT NULL DEFAULT FALSE
);

isTaken:
SELECT COUNT(*) != 0 FROM Meetings
WHERE availabilityId = ? AND startInstant = ?;

lastInsertId:
SELECT LAST_INSERT_ID();

insert:
INSERT INTO Meetings(availabilityId, expertUid, creatorUid, state, startInstant, durationMinutes)
VALUES (?, ?, ?, ?, ?,?);

getById:
SELECT * FROM Meetings WHERE id = ?;

getByUserId:
SELECT * FROM Meetings WHERE expertUid = :uid OR creatorUid = :uid;

markDeleted:
UPDATE Meetings
SET deleted = TRUE
WHERE id = ?;

updateState:
UPDATE Meetings
SET state = ?
WHERE id = ?;

countByState:
SELECT COUNT(*) FROM Meetings WHERE expertUid = ? AND state = ?;