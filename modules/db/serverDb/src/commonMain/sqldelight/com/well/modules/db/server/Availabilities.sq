import com.well.modules.models.Repeat;
import com.well.modules.models.User;
import com.well.modules.models.Availability;
import kotlinx.datetime.Instant;

CREATE TABLE Availabilities (
    id BIGINT AS Availability.Id NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ownerId BIGINT AS User.Id NOT NULL,
    startInstant BIGINT AS Instant NOT NULL,
    durationMinutes INTEGER NOT NULL,
    `repeat` TEXT AS Repeat NOT NULL,
    deleted BOOLEAN NOT NULL DEFAULT FALSE
);

lastInsertId:
SELECT LAST_INSERT_ID();

getByOwnerIdQuery:
SELECT * FROM Availabilities WHERE ownerId = ? AND deleted = FALSE;

userHasAvailabilities:
SELECT COUNT(*) > 0 FROM Availabilities WHERE ownerId = ? AND deleted = FALSE;

getById:
SELECT * FROM Availabilities WHERE id = ?;

insert:
INSERT INTO Availabilities(ownerId, startInstant, durationMinutes, `repeat`)
VALUES (?, ?, ?, ?);

intersects:
SELECT COUNT(*) > 0
FROM Availabilities
WHERE
    ownerId = :ownerId AND deleted = FALSE
    AND startInstant + durationMinutes * 1000 < :startInstant
    AND startInstant > :endInstant
;

isOwnerEquals:
SELECT ownerId = :ownerId FROM Availabilities WHERE id = :id;

markDeleted:
UPDATE Availabilities
SET deleted = TRUE
WHERE id = ?;

clearUser:
DELETE FROM Availabilities
WHERE ownerId = :id;